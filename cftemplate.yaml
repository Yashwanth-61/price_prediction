---
AWSTemplateFormatVersion: 2010-09-09
Description: CloudFormation template for creating public subnets and an EC2
  instance with Docker installed
Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: ID of the VPC where resources will be created
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of the EC2 key pair to associate with the instance
Resources:
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: VpcId
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: VpcId
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: VpcId
      InternetGatewayId: InternetGateway
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: VpcId
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: InternetGateway
  SubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: PublicSubnetA
      RouteTableId: RouteTable
  SubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: PublicSubnetB
      RouteTableId: RouteTable
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-xxxxxxxxxxxxxx
      InstanceType: t2.micro
      KeyName: KeyName
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          DeleteOnTermination: true
          SubnetId: PublicSubnetA
      UserData:
        Fn::Base64: |
          #!/bin/bash
          yum update -y
          yum install -y docker
          systemctl start docker
          systemctl enable docker
Outputs:
  InstanceId:
    Description: Instance ID of the newly created EC2 instance
    Value: EC2Instance
